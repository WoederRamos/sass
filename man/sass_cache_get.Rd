% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sass_cache.R
\name{sass_cache_get}
\alias{sass_cache_get}
\alias{sass_cache_set}
\title{Get/set sass cache, globally}
\usage{
sass_cache_get(default = sass_file_cache())

sass_cache_set(cache = sass_file_cache())
}
\arguments{
\item{default}{a definition for the default cache to use if no global cache
has been set. Like \code{cache}, this can be either a \link{FileCache} object or a character
string specifying a caching directory.}

\item{cache}{either a \link{FileCache} object or a character string specifying a caching directory.
If \code{NULL}, then caching is disabled (globally).}
}
\description{
Use these functions to globally configure \code{\link[=sass]{sass()}} caching. To disable
caching, do \code{sass_cache_set(NULL)}. To set a caching directory, provide
the directory to \code{sass_cache_set()}. For finer control for the caching size
and eviction policy, provide a \code{sass_file_cache()} (or \verb{[FileCache]}) to
\code{sass_cache_set()}. Note that, by default, caching is enabled and the directory
is determined by \code{sass_cache_context_dir()} (see the details section below).
}
\details{
If \code{sass_cache_context_dir()} is called outside of a Shiny app, it returns
\code{rappdirs::user_cache_dir("R-sass")}. Otherwise, it looks for a special
app subdirectory named \verb{cache/}, and if it exists, it uses a directory named
\verb{cache/sass/} to store the cache. This directory is not created (only used)
when running a Shiny app locally, but when running Connect or Shiny Server,
it \emph{will} create a \verb{cache/sass/} subdirectory, so that the cache is scoped
to the application and will not interfere with another application's cache.
}
\seealso{
\code{\link[=sass]{sass()}}
}
